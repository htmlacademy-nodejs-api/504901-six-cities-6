openapi: 3.1.0
info:
  title: API сервер для демо-проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
  - name: users
    description: Управление учетными записями пользователей.
  - name: offers
    description: Управление предложениями об аренде.
  - name: comments
    description: Добавление комментариев к определённому предложению по аренде.

paths:
  users/registration:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя. Создавать новых пользователей могут только анонимные клиенты

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newUser'
        required: true

      responses:
        "201":
          description: Пользователь создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Аутентификация пользователя
      description: Аутентификация пользователя и предоставление доступа к закрытым разделам приложения. В случае успешной проверки логина и пароля сервис возвращает клиенту токен.

      requestBody:
        description: Информация для аутентификации пользователя.
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
        required: true

      responses:
        "200":
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Неверный логин или пароль.

    get:
      tags:
        - users
      summary: Проверка текущего статуса пользователя
      description: Если клиент авторизован, сервис возвращает соответствующий код состояния и информацию о пользователе.

      parameters:
        - name: token
          in: header
          description: JWT token
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  avatar:
                    type: string
                    nullable: true
                  typeUser:
                    $ref: '#/components/schemas/userType'
        "401":
          description:  Неверный токен или срок действия токена истек

  /offers:
    get:
      tags:
        - offers
      summary: Возвращает список предложений по аренде недвижимости.
      description: По умолчанию сервис возвращает не больше 60 предложений по аренде. Клиент может запросить больше предложений, указав нужное количество в параметре запроса
        Сервис всегда возвращает отсортированный список предложений по дате публикации (по убыванию).
        Предложение не содержит список комментариев. Только информацию об их количестве. Для запроса комментариев к определённому предложению сервис предоставляет отдельный ресурс.

      parameters:
        - name: token
          in: header
          description: 'JWT token'
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          schema:
            type: number
        - name: city
          in: query
          description: city
          schema:
            type: string
        - name: favorite
          in: query
          description: favorite
          schema:
            type: boolean

      responses:
        "200":
          description: Список предложений по аренде
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offer'
        "401":
          description:  Неверный токен или срок действия токена истек

    post:
      tags:
        - offers
      summary: Создание предложения по аренде
      description: Создавать предложения могут только авторизованные клиенты

      parameters:
        - name: token
          in: header
          description: 'JWT token'
          schema:
            type: string
          required: true

      requestBody:
        description: Информация для создания предложения по аренде.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'

      responses:
        "201":
          description: Предложение по аренде успешно создано.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "401":
          description:  Неверный токен или срок действия токена истек

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Предоставляет детальную информации о конкретном предложении об аренде недвижимости.
      description: Детальную информацию по предложению могут запрашивать авторизованные и анонимные клиенты.
      parameters:
        - name: token
          in: header
          description: 'JWT token'
          schema:
            type: string
        - name: offerId
          in: path
          required: true
          description: ID предложения
          schema:
            type: string

      responses:
        "200":
          description: Детальная информация получена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Неверный запрос или данные.
        "404":
          description: Предложение не найдено.
        "401":
          description:  Неверный токен или срок действия токена истек

    patch:
      tags:
        - offers
      summary: Редактирование предложения по аренде.
      description: Редактировать предложения по аренде могут только авторизованные клиенты.
      parameters:
        - name: token
          in: header
          description: JWT token
          schema:
            type: string
          required: true
        - name: offerId
          in: path
          description: ID предложения
          required: true
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'

      responses:
        "200":
          description: Предложение успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Неверный запрос или данные.
        "403":
          description: Вы не можете отредактировать чужое предложение по аренде.
        "404":
          description: Предложение не найдено.
        "401":
          description:  Неверный токен или срок действия токена истек

    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде.
      description: Удалять предложения могут только авторизованные клиенты.
      parameters:
        - name: token
          in: header
          description: 'JWT token'
          schema:
            type: string
          required: true
        - name: offerId
          in: path
          required: true
          description: ID предложения
          schema:
            type: string

      responses:
        "204":
          description: Предложение успешно удалено.
        "400":
          description: Неверный запрос или данные.
        "403":
          description: Нельзя удалить предложение другого пользователя.
        "404":
          description: Предложение не найдено.
        "401":
          description:  Неверный токен или срок действия токена истек

  /offers/{offer_id}/favorite/:
    put:
      tags:
        - offers
      summary: Добавление и удаление предложения в/из избранного
      description:
        Сервис предоставляет ресурс для добавления и удаления любого предложения в/из списка избранных предложений.
        Ресурс доступен только авторизованным клиентам.
      parameters:
        - name: token
          in: header
          description: 'JWT token'
          required: true
          schema:
            type: string

      requestBody:
        description: Добавление и удаление избраных предложений пользователя.
        content:
          application/json:
            schema:
              type: object
              properties:
                isFavorite:
                  type: boolean
                  example: false
        required: true

      responses:
        '200':
          description: Добавление или удаление избранных предложение успешно.
          content:
            application/json:
              schema:
                type: object
                properties:
                  isFavorite:
                    type: boolean
                    example: false
        '400':
          description: Неверный запрос или данные.
        '401':
          description:  Неверный токен или срок действия токена истек
        '404':
          description: Предложение не найдено.

  /offers/{city}/premium:
    get:
      tags:
        - offers
      summary: Предоставляет премиальные предложения для города.
      description: Сервис предоставляет ресурс для получения списка премиальных предложений для определённого города.
        Премиальное предложение — предложение с флагом «Premium».
        Сервис возвращает не больше 3 предложений с флагом «Premium».
        Список возвращаемых предложений отсортирован по дате публикации (по убыванию).
        Ресурс доступен авторизованным и анонимным клиентам.

      parameters:
        - name: city
          in: path
          required: true
          description: Город
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          schema:
            type: number

      responses:
        "200":
          description: Информация получена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Неверный запрос или данные.

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Получение списка комментариев, связанных с определённым предложением об аренде.
      description: Сервис всегда возвращает список из 50 (или меньше) последних комментариев. Комментарии отсортированы по дате публикации (по убыванию). Комментарии могут запрашивать авторизованные и анонимные клиенты.
      parameters:
        - name: offerId
          in: path
          required: true
          description: ID предложения
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          schema:
            type: number

      responses:
        "200":
          description: Список комментариев
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/comment'
        "400":
          description: Неверный запрос или данные.
        '404':
          description: Предложение не найдено.

    post:
      tags:
        - comments
      summary: Добавление нового комментария к предложению об аренде.
      description: Добавлять комментарии могут только авторизованные клиенты.
      parameters:
        - name: token
          in: header
          description: 'JWT token'
          required: true
          schema:
            type: string
        - name: offerId
          in: path
          required: true
          description: ID предложения
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'

      responses:
        "201":
          description: Комментарий успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        "400":
          description: Неверный запрос или данные.
        "404":
          description: Предложение не найдено.
        "401":
          description:  Неверный токен или срок действия токена истек

components:
  schemas:
    newUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        avatar:
          type: string
          nullable: true
        password:
          type: string
        typeUser:
          $ref: '#/components/schemas/userType'

    user:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea
        email:
          type: string

    offer:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        postDate:
          type: string
          format: date-time
        city:
          $ref: '#/components/schemas/city'
        image:
          type: string
        photos:
          type: array
          items:
            type: string
        isPremium:
          type: boolean
        isFavourites:
          type: boolean
        rating:
          type: number
        typeOfHousing:
          $ref: '#/components/schemas/offerType'
        roomsCount:
          type: integer
        guestsCount:
          type: integer
        price:
          type: number
        comforts:
          type: array
          items:
            type: string

    premium:
      offer:
      type: object
      properties:
        price:
          type: number
        title:
          type: string
        typeOfHousing:
          $ref: '#/components/schemas/offerType'
        isFavourites:
          type: boolean
        postDate:
          type: string
          format: date-time
        city:
          $ref: '#/components/schemas/city'
        image:
          type: string
        isPremium:
          type: boolean
        rating:
          type: number
        commentsCount:
          type: integer

    city:
      type: string
      enum:
        - Paris
        - Cologne
        - Brussels
        - Amsterdam
        - Hamburg
        - Dusseldorf

    offerType:
      type: string
      enum:
        - apartment
        - house
        - room
        - hotel

    userType:
      type: string
      enum:
        - common
        - pro

    location:
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number

    comment:
      type: object
      properties:
        text:
          type: string
        postDate:
          type: string
          format: date-time
        rating:
          type: number
        user:
          $ref: '#/components/schemas/user'

